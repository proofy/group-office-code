#!/bin/bash

#
# Copyright Carel Fellinger 2006
# Author: Carel Fellinger
# Version: 1.0 Release date: 11 dec 2006
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.

set -e
#set -v
#set -x

revision=$(echo "$Revision: 22 $" | cut -d' ' -f2)
# don't forget trailing newline!
ciHead="Archive Maintenance by fixGOsvn@$revision
"

sfHost=group-office.svn.sourceforge.net
sfGOsvn=https://$sfHost/svnroot/group-office/
localGOsvn=file://`pwd`/localGOsvn

# either work on local copy ($localGOsvn) or on the real thing ($sfGOsvn)
if [ "$1" == "--do-the-real-thing" ] ; then
    repo=$sfGOsvn
else
    repo=$localGOsvn
fi


echo "=== Working on repo $repo ===
"


# uncomment next line to test incremental fixes on localGOsvn
#incrementalLocalGOsvn=yes


# er zit geen Makefile in 't archief, laten pattern maar wel staan
# *.bib en *.tex komen ook niet meer voor, laten we die patterns ook staan?
# php class files heten hier ook inc files, *.class pattern toch toevoegen?
TextPatterns="
    *.GPL  *.LGPL  *.afm  *.afp  *.asp
    *.bib  *.c  *.cfc  *.cfg  *.cfm  *.cgi  *.class  *.conf   *.css
    *.default  *.diff  *.dist  *.dtd
    *.hallspars  *.htc  *.htm  *.html
    *.icf  *.inc  *.info  *.ini  *.java  *.js
    *.lasso  *.ldap  *.map  *.move  *.new
    *.php  *.pl  *.py  *.schema  *.sh  *.sql  *.suspended
    *.tex  *.tpl  *.txt  *.types  *.user  *.vcf  *.xml
    CHANGELOG  COPYING  ChangeLog  DEVELOPERS  FAQ  HACKING
    INSTALL  LICENSE  Makefile  README  RELEASE
    ShareAccessLDAP  ShareAccessMYSQL  TODO  TRANSLATORS
    UserDefaultLDAP  UserDefaultMYSQL  dompdf_font_family_cache
    fixGOsvn  make_language_pack  pipeing
"
# er zit geen *.eps meer in, laten we dat pattern er toch in staan?
BinaryPatterns="
    *.au  *.eps  *.gif  *.ico  *.img  *.jar  *.jpg
    *.pdf  *.png  *.so  *.swf  *.wav  calendar-hr.js  macAddr
"
ExecutablePatterns="
    *.sh  fixGOsvn  macAddr  make_language_pack  pipeing
"
pruneSVN="-name .svn -prune -not -name .svn"


function names2find(){
    python -c "
exts = ['-name %s' % x for x in '$*'.split() if x[0] != '#']
print ' -or '.join(exts),
"
}



if [ "x$repo" != "x$sfGOsvn" ] ; then
   echo '
       ===========================================
       Get up-to-date with current sourceforge SVN
       ===========================================
   '

   echo "=== rsync sfGOsvn with sourceforge.net"
   # let op trailing / after source dir!!
   rsync -av --delete  $sfHost::svn/group-office/  sfGOsvn


   echo '
       ==============================
       Make local copy to fiddle with
       ==============================
   '

   if [ "x$incrementalLocalGOsvn" != "xyes" ] ; then
      echo "=== rsync local copy localGOsvn"
      # let op trailing / after source dir!!
      rsync -av --delete sfGOsvn/  localGOsvn
   fi
fi



echo "
    =======================
    Check repository layout
    =======================
"
if ! svn ls $repo | grep -q branches ; then
   echo "=== add standard branches directory"
   svn mkdir $repo/branches \
       -m "${ciHead}+ /branches: adjust to standard repo layout"
fi

if ! svn ls $repo/trunk | grep -q www ; then
   echo "=== split /trunk into scripts and www subdirs"
   svn mv $repo/trunk $repo/www \
       -m "${ciHead}* prepare /trunk to /trunk/www rename"
   svn mkdir $repo/trunk \
       -m "${ciHead}* second step in /trunk to /trunk/www rename"
   svn mv $repo/www $repo/trunk/www \
       -m "${ciHead}* finalize /trunk to /trunk/www rename"
   svn mkdir $repo/trunk/scripts \
       -m "${ciHead}+ /trunk/scripts: non-web-executable scripts"
   #TODO? fix tag 2.16-5 ?, neen
   echo "=== fill with initial version of fixGOsvn script"
   zandbak=/tmp/zandbak$$
   svn co $repo/trunk/scripts $zandbak
   cp $0 $zandbak/fixGOsvn
   svn add $zandbak/fixGOsvn
   svn propset svn:executable '*' $zandbak/fixGOsvn
   svn propset svn:mime-type text/x-sh $zandbak/fixGOsvn
   svn propset svn:eol-style native $zandbak/fixGOsvn
   svn propset svn:keyword "URL Revision" $zandbak/fixGOsvn
   svn ci $zandbak \
       -m "${ciHead}+ fixGOsvn:  normalize and fix svn archive"
   rm -rf $zandbak
fi


echo "
    ===================
    Check local zandbak
    ===================
"
zandbak=zandbak
if [ -d $zandbak ] ; then
   if [ "$(svn info $zandbak | grep URL)" == "URL: $localGOsvn/trunk" ] ; then
      echo "=== get rid of zandbak of ambiguous origin"
      rm -rf $zandbak
   fi
fi

if [ -d $zandbak ] ; then
   echo "=== update local zandbak"
   svn update $zandbak
else
   echo "=== create local zandbak"
   svn co -q $repo/trunk  $zandbak
fi


if ! diff -q $zandbak/scripts/fixGOsvn $0 ; then
   echo "=== update fixGOsvn script"
   cp $0 $zandbak/scripts/fixGOsvn
   svn ci $zandbak \
       -m "${ciHead}fixGOsvn:\n  * updated to newer version"
fi



echo "
    ======================
    Apply Some known fixes
    ======================
"


# in het archief staan zo'n 15 (14 in de Atic) Thumbs.db files
echo "=== remove thumbnails"
find $zandbak -name 'Thumbs.db' -exec svn delete  '{}' ';'
find $zandbak -name '.xvpics' -exec svn delete  '{}' ';'
svn ci $zandbak \
    -m "${ciHead}- removed spurious thumbnail files"


# in het archief staan zo'n 4 backup files (in cvs, in svn 0)
echo "=== remove backup files"
find $zandbak -name '*~' -exec svn delete  '{}' ';'
svn ci $zandbak \
    -m "${ciHead}- removed spurious backup files"


# in het archief zitten zo'n 3852 executable non-executables
echo "=== foute exec vlaggen weghalen"
find zandbak $pruneSVN -or -type f \
    -not \( $(names2find $ExecutablePatterns) \) \
    -exec svn -q propdel svn:executable '{}' ';'
svn ci $zandbak \
    -m "${ciHead}- get rid of spurious executable flags"


echo "=== vergeten exec vlaggen zetten"
find zandbak $pruneSVN -or -type f \
    \( $(names2find $ExecutablePatterns) \) \
    -exec svn -q propset svn:executable '*' '{}' ';'
svn ci $zandbak \
    -m "${ciHead}+ add forgotten executable flags"



# in het archief staan zo'n 1243 files met 'foute' CRLF
echo "=== mixed eol in text files normaliseren"
echo "to see without EOL: grep -E -e ':  zand' logje | grep -v CR | grep -v LF"
echo "to see mixed EOL: grep -E -e '^(UNIX|DOS) pure' logje"
find zandbak/www $pruneSVN -or -type f \
    \( $(names2find $TextPatterns) \)  \
    -exec python -c "path = '{}'
import re, sys
data=open(path, 'rb').read()
rn, rrn = data.count('\r\n'), data.count('\r\r\n')
r, n = data.count('\r') - rn - rrn, data.count('\n') - rn
eols = [(r,'%2d CR'), (rn,'%4d CRLF'), (rrn,'%2d CRCRLF'), (n,'%4d LF')]
eols = [x for x in eols if x[0]]
eols.sort()
eols.reverse()
eols = ', '.join([y%x for x,y in eols])
if not (r or rrn or rn): # pure unix
    print 'UNIX pure:', eols, path
    raise SystemExit
if not (n or r or rrn): # pure dos
    print 'DOS pure: ', eols, path
    raise SystemExit
if r and n or rrn:
    print >>sys.stderr, 'WARNING: ugly eol mix %s in %s' % (eols, path)
if rn < n: # unix like
    print 'UNIX like:', eols, path
    data = re.sub('\r+\n', '\n', data)
else: # dos like
    print 'DOS like: ', eols, path
    data = re.sub('\r*\n|\r', '\r\n', data)
open(path, 'wb').write(data)
"  ';'
svn ci $zandbak \
    -m "${ciHead}* normalize eol (no more mixing of CR and CRLF)"


echo "=== switch to native eol-style for all text files"
find zandbak/www $pruneSVN -or -type f \
    \( $(names2find $TextPatterns) \)  \
    -exec svn -q propset svn:eol-style native '{}' ';'
svn ci $zandbak \
    -m "${ciHead}+ set native eol-style on all text files"


echo "=== set mime-type to text/plain for all textfiles"
find zandbak/www $pruneSVN -or -type f \
    \( $(names2find $TextPatterns) \)  \
    -exec svn -q propset svn:mime-type text/plain '{}' ';'
svn ci $zandbak \
    -m "${ciHead}+ set text/plain mime-type on all text files"


# slechts 531 (1?) van de 2988 binaries staan als zodanig in het archief
echo "=== markeer binary files als zodanig"
find zandbak $pruneSVN -or -type f \
    \( $(names2find $BinaryPatterns) \) \
    -exec svn -q propset svn:mime-type 'application/octet-stream'  '{}' ';'
svn ci $zandbak \
    -m "${ciHead}+ set application/octet-stream mime-type on all binary files"


echo "=== gebruikte zinniger mime-type voor pdf en image files"
find zandbak $pruneSVN -or -type f \
    -name \*.pdf \
    -exec svn -q propset svn:mime-type 'application/pdf'  '{}' ';'
for ext in gif png ; do
    find zandbak $pruneSVN -or -type f \
	-name \*.$ext \
	-exec svn -q propset svn:mime-type "image/$ext"  '{}' ';'
find zandbak $pruneSVN -or -type f \
    -name \*.jpeg -or -name \*.jpg -or -name \*.jpe \
    -exec svn -q propset svn:mime-type 'image/jpeg'  '{}' ';'
done
svn ci $zandbak \
    -m "${ciHead}+ set appropriate mime-type on pdf, gif, png and jpg files"


echo "=== trim spurious whitespace after ?> at end of php/inc files ==="
find zandbak $pruneSVN -or -type f \
    -name \*.php -or -name \*.inc -or -name \*.class \
    | \
while read path; do
    python -c "
path = '$path'
f = open('$path', 'r+')
data = f.read()
n = len(data)
data = data.rstrip()        # drop trailing whitespace
had_trailing_whitespace = n != len(data)
if not data[-2:] == '?>':   # but leave file alone iff no close tag found
    raise SystemExit
f.seek(0); f.truncate()
f.write(data)
if had_trailing_whitespace: # turn trailing whitespace into one newline
    f.write('\n')
f.close()
"
done
svn ci $zandbak \
    -m "${ciHead}* trim spurious whitespace after ?> at end of php/inc files
this whitespace might lead to havoc and really shouldn't be there

see http://lists.drupal.org/archives/development/2005-08/msg00648.html
for a long discussion of this topic on the drupal mailing list
"


echo "=== trim spurious whitespace at end of php/inc files ==="
find zandbak $pruneSVN -or -type f \
    -name \*.php -or -name \*.inc -or -name \*.class \
    | \
while read path; do
    python -c "
path = '$path'
f = open('$path', 'r+')
data = f.read()
n = len(data)
data = data.rstrip()
f.seek(0); f.truncate()
f.write(data)
f.write('\n') # add one trailing newline
f.close()
"
done
svn ci $zandbak \
    -m "${ciHead}* trim spurious whitespace at end of php/inc files
normalize on whitespace after the evel whitespace (after ?>) had been removed"


echo "=== drop optional php-end-tag at end of php and inc files ==="
find zandbak $pruneSVN -or -type f \
    -name \*.php -or -name \*.inc -or -name \*.class \
    | \
while read path; do
    python -c "
path = '$path'
f = open('$path', 'r+')
data = f.read()
data = data.rstrip() # drop trailing whitespace
if data[-2:] != '?>':# but bail out iff no close tag found
    raise SystemExit
data = data[:-2]     # drop trailing close tag
data = data.rstrip() # drop whitespace before the dropped close tag too
f.seek(0); f.truncate()
f.write(data)
f.write('\n')        # add one trailing newline
f.close()
"
done
svn ci $zandbak \
    -m "${ciHead}* drop optional php-end-tag at end of php and inc files

according to http://us3.php.net/basic-syntax.instruction-separation the
closing tag of a PHP block at the end of a file is optional and includes
an immediately trailing newline if present, but no other spaces nor newlines.
Moreover any extra whitespace at the end of the file means trouble,
hence the guideline to omit such a closing tag at the end of a file.

see http://lists.drupal.org/archives/development/2005-08/msg00648.html
for a long discussion of this topic on the drupal mailing list
"


# TODO check filenames:
#    * Windows: con, aux, com, com1 - com9, prn, lpt1 - lpt3, nul, a: - z:, clock$, _svn
#    * All: .svn   and no spaces
